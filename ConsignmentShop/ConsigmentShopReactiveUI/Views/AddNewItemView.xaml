<rxui:ReactiveUserControl
    xmlns:rxui="http://reactiveui.net" 
    x:Class="ConsignmentShopReactiveUI.AddNewItemView"
    x:TypeArguments="vm:AddNewItemViewModel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:vm="clr-namespace:ConsigmentShopReactiveUI.ViewModels"
    mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800">
    <UserControl.Resources>
        <!--Enable Specific buttons on no validation error-->
        <Style TargetType="{x:Type Button}" x:Key="ActionBtn">
            <Setter Property="IsEnabled" Value="false" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=TextBoxTitle,
                            Path=(Validation.HasError)}" Value="false" />
                        <Condition Binding="{Binding ElementName=TextBoxPrice,
                            Path=(Validation.HasError)}" Value="false" />
                        <Condition Binding="{Binding ElementName=ComboBoxOwner,
                            Path=(Validation.HasError)}" Value="false" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        
        <!--Column 0 DataGrid-->
        
        <DataGrid Grid.Column="0" ItemsSource="{Binding Items}" 
             IsReadOnly="True" CanUserAddRows="False"
                  CanUserDeleteRows="False"  AlternatingRowBackground="Blue" 
                  AutoGenerateColumns="False" 
                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Title" FontSize="18"
                                    FontWeight="Bold"
                                    Binding="{Binding Path=Title}" />
                <DataGridTextColumn Header="Description"  FontSize="18"
                                    FontWeight="Bold"
                                    Binding="{Binding Path=Description}"/>
                <DataGridTextColumn Header="Price"  FontSize="18"
                                    FontWeight="Bold"
                                    Binding="{Binding Path=Price, StringFormat='\0\$'}"/>
                <DataGridCheckBoxColumn Header="Sold"  
                                    Binding="{Binding Path=Sold}"/>
                <DataGridCheckBoxColumn Header="Payment Distributed" 
                                    Binding="{Binding Path=PaymentDistributed}"/>
                <DataGridTextColumn Header="Owner" FontSize="18" FontWeight="Bold" 
                                  Binding="{Binding Path=Owner}"  />
            </DataGrid.Columns>
        </DataGrid>
   
        <!--Column 1 Gridsplitter-->

        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="5"/>
        
        <!--Column 2 Item Form-->

        <WrapPanel Orientation="Vertical" Grid.Column="2">
            <WrapPanel Orientation="Horizontal" Margin="10">
                <TextBlock Text="Title: " FontSize="18" FontWeight="Bold" 
                           VerticalAlignment="Bottom"/>
                <TextBox  Name="TextBoxTitle" Text="{Binding Title, Mode=TwoWay,
                    UpdateSourceTrigger=PropertyChanged,
                    NotifyOnValidationError=True, ValidatesOnDataErrors=True}" FontSize="18"
                         FontWeight="Bold" Margin="10,10,0,0" MinWidth="150"
                          VerticalAlignment="Center"/>
            </WrapPanel>
            <WrapPanel Orientation="Horizontal" Margin="10">
                <TextBlock Text="Description: " FontSize="18" FontWeight="Bold" 
                           VerticalAlignment="Center"/>
                <TextBox Text="{Binding Description, Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged}"
                         FontSize="18" FontWeight="Bold"  Margin="10,10,0,0" Width="300" 
                         MinHeight="150" TextWrapping="Wrap" AcceptsReturn="True"
                         SpellCheck.IsEnabled="True" AcceptsTab="True" 
                         VerticalScrollBarVisibility="Auto"/>
            </WrapPanel>
            <WrapPanel Orientation="Horizontal" Margin="10">
                <TextBlock Text="Price: " FontSize="18" FontWeight="Bold" 
                           VerticalAlignment="Center"/>
                <TextBox Name="TextBoxPrice" Text="{Binding Price, Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True,
                    ValidatesOnDataErrors=True}"
                         FontSize="18" FontWeight="Bold"  Margin="10,10,0,0" MinWidth="25" 
                         Height="25" TextAlignment="Center" />
                <TextBlock Text="$" FontSize="18" FontWeight="Bold" 
                       VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"/>
            </WrapPanel>
            <WrapPanel Orientation="Horizontal" Margin="10" >
                <TextBlock Text="Sold: " FontSize="18" FontWeight="Bold" 
                           VerticalAlignment="Center"/>
                <CheckBox IsChecked="{Binding Sold, Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged}"
                         FontSize="18" FontWeight="Bold"  Margin="10,10,0,0" MinWidth="20" 
                         Height="20" />
            </WrapPanel>
            <WrapPanel Orientation="Horizontal" Margin="10">
                <TextBlock Text="Payment Distributed: " FontSize="18" FontWeight="Bold" 
                           VerticalAlignment="Center"/>
                <CheckBox IsChecked="{Binding PaymentDistributed, Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged}"
                         FontSize="18" FontWeight="Bold"  Margin="10,10,0,0" MinWidth="20" 
                         Height="20" />
            </WrapPanel>
            <WrapPanel Orientation="Horizontal" Margin="10" >
                <TextBlock Text="Owner: " FontSize="18" FontWeight="Bold" 
                           VerticalAlignment="Center"/>
                <ComboBox Name="ComboBoxOwner" ItemsSource="{Binding Path=Vendors}"
                          SelectedItem="{Binding Path=SelectedVendor, Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged,
                    NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                          DisplayMemberPath="FullName"
                           Width="174" HorizontalAlignment="Left"
                             VerticalAlignment="Top"
                          FontSize="18" FontWeight="Bold" />
            </WrapPanel>
            <WrapPanel Orientation="Horizontal" Margin="10">
                <Button x:Name="AddItem" Content="Add" Margin="5" 
                            FontWeight="Bold" FontSize="18" 
                        Style="{StaticResource ActionBtn}"/>
                <Button x:Name="UpdateItem" Content="Update" Margin="5"
                            FontWeight="Bold" FontSize="18" 
                        Style="{StaticResource ActionBtn}"/>
                <Button x:Name="DeleteItem" Content="Delete" Margin="5"
                            FontWeight="Bold" FontSize="18" 
                        Style="{StaticResource ActionBtn}"/>
                <Button x:Name="SearchItem" Content="Search" Margin="5"
                            FontWeight="Bold" FontSize="18"/>
                <Button x:Name="Reset" Content="Reset" Margin="5"
                            FontWeight="Bold" FontSize="18"/>
            </WrapPanel>
        </WrapPanel>
    </Grid>
    
</rxui:ReactiveUserControl>
